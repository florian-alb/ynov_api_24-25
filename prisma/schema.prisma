generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String      @id @default(uuid()) @db.Uuid
  emailAddress String      @unique
  password     String
  name         String
  signatures   Signature[]
  messages     Message[]
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  folders      Folder[]
}

model Signature {
  id       String  @id @default(uuid()) @db.Uuid
  body     String
  isActive Boolean @default(false)
  user     User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId   String  @db.Uuid
}

model Message {
  id         String        @id @default(uuid()) @db.Uuid
  sender     String
  recipients String[]
  createdAt  DateTime      @default(now())
  subject    String
  body       String
  User       User?         @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     String?       @db.Uuid
  folder     Folder?       @relation(fields: [folderId], references: [id])
  folderId   String?       @db.Uuid
  status     MessageStatus @default(UNREAD)
  isFavorite Boolean       @default(false)
  isSent     Boolean       @default(false)
  isDraft    Boolean       @default(false)
  isTrash    Boolean       @default(false)
}

model Folder {
  id       String    @id @default(uuid()) @db.Uuid
  name     String
  user     User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  messages Message[]
  userId   String    @db.Uuid

  @@unique([userId, name])
}

enum MessageStatus {
  UNREAD
  READ
}
